@using BlogProjectOnion.Application.Models.VMs;
@using BlogProjectOnion.Application.Services.Abstract;
@using BlogProjectOnion.Domain.Entities;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<AppUser> _userManager
@inject ILikeService _likeManager

@{
    AppUser appUser = await _userManager.GetUserAsync(User);

}

@{
    ViewData["Title"] = "PostList";
}
@model List<PostVM>

@{
    var random = new Random();
}

<link href="~/css/postlist.css" rel="stylesheet" />
<script src="/lib/jquery/dist/jquery.min.js"></script>


<section class="light">
	<div class="container py-2">
		<div class="h1 text-center text-dark" id="pageHeaderTitle">MAKALELER</div>

           @foreach (var item in Model)
        {
            Like like = await _likeManager.TGetDefault(x => x.AppUserId == appUser.Id && x.PostId == item.Id);
           
		<article class="postcard light blue">
			<a class="postcard__img_link" href="#">
                @if (item.ImagePath == "" || item.ImagePath == null)
                {
                    <img class="postcard__img skewed-img" src="~/assets/img/defaultPost.jpg" alt="Image Title" />
                }
                else
                {
                    <img class="postcard__img" src="/@item.ImagePath" alt="Image Title" />
                }
            </a>
			<div class="postcard__text t-dark">
                    <h1 class="postcard__title blue" style="text-decoration: none;"><a href="~/Post/Index/@item.Id">@item.Title</a></h1>
                    <a href="/Profile/Index/@item.Author.Id"><h6 style="font-weight:normal; text-decoration: none;">Yazar : @item.Author.FirstName @item.Author.LastName</h6></a>

				<div class="postcard__subtitle small">
					<time datetime="2020-05-25 12:00:00">
                            <i class="fas fa-calendar-alt mr-2"></i> @item.CreatedDate.ToShortDateString()
					</time>
				</div>
				<div class="postcard__bar"></div>
                    @if (item.Content.Length >= 350)
                    {
                        <div class="postcard__preview-txt">@Html.Raw(@item.Content.Substring(0,350))...</div>

                    }
                    else
                    {
                        <div class="postcard__preview-txt">@Html.Raw(@item.Content)</div>

                    }
                    <ul class="postcard__tagbox">
                        <li class="tag__item">
                           @if (like == null)
                            {
                               
                                <a onclick="toggleLikeState(@item.Id,@item.Likes.Count + 1, '@appUser.Id', this)" data-liked="true">
                                    <i class="fas fa-clock mr-2"></i> <span id="likeText">@item.Likes.Count Beğen</span>
                                </a>
                            }
                            else
                            {
                                
                                <a onclick="toggleLikeState(@item.Id,@item.Likes.Count, '@appUser.Id', this)" data-liked="false">
                                    @* data-liked true yada false gidiyor ona göre işlem sağlanıyor *@
                                    <i class="fas fa-thumbs-up mr-2"></i><span id="likeText">@item.Likes.Count Beğenildi</span>
                                </a>
                            }
                        <li class="tag__item">
                            <a href="/Post/Index/@item.Id">
                                <i class="fas fa-clock mr-2"></i> Yorum Yap
                            </a>
                        </li>
				</ul>
			</div>
		</article>
        }
		</div>
</section>



 <style >
    .custom-header {
        font-family: 'YourFont', sans-serif;
        color: #999;
    }

    .tag__item a {
        cursor: pointer; /* Fare imlecini değiştir */
        text-decoration: none; /* Link altı çizgisini kaldır */
        color: #000; /* Varsayılan metin rengi */
    }

        .tag__item a:hover {
            color: #007bff; /* Fare üzerine gelindiğinde metin rengini değiştir */
        }

    .tag__item .btn {
        height: 20px; /* İhtiyaca göre yüksekliği ayarla */
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

 <script>

    function toggleLikeState(postId, likeCount, userId, element) {
        var liked = element.getAttribute('data-liked') === 'true';
        
        if (liked) {
            GetpostAndUserId(postId, userId);
            element.innerHTML = `<i class="fas fa-thumbs-up mr-2"></i> ${likeCount} Beğenildi`;

            element.setAttribute('data-liked', 'false');
        } else {
            RemoveLike(postId, userId);
          
            likeCount -= 1;
            element.innerHTML = `<i class="fas fa-clock mr-2"></i> ${likeCount} Beğen`;
            element.setAttribute('data-liked', 'true');
        }
    }
    function GetpostAndUserId(_postid, _userid) {
        console.log("Ekleme")
        let like = {
            postId: _postid,
            userId: _userid,
        };
        $.ajax({
            url: "/Post/AddLike",
            type: "POST",
            data: like,
            dataType: "json",
            success: function () {
                console.log("Başarılı");
            },
            error: function (error) {
                console.log("Başarısız");
            },
        });
    }


    function RemoveLike(_postid, _userid) {
        console.log("Silme")
        let like = {
            postId: _postid,
            userId: _userid,
        };
        $.ajax({
            url: "/Post/RemoveLike",
            type: "POST",
            data: like,
            dataType: "json",
            success: function () {
                console.log("Başarılı");
            },
            error: function (error) {
                console.log("Başarısız");
            },
        });
    }
 </script>